name: AI PR Summary

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  summarize-pr:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get PR Diff
        id: diff
        run: |
          PR_DIFF=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" "${{ github.event.pull_request.diff_url }}")
          echo "PR_DIFF<<EOF" >> $GITHUB_ENV
          echo "$PR_DIFF" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests

      - name: Generate PR Summary
        id: summary
        run: |
          python - <<EOF
          import os
          import requests

          API_TOKEN = os.environ['HF_API_TOKEN']
          headers = {"Authorization": f"Bearer {API_TOKEN}"}

          diff_text = os.environ['PR_DIFF']
          payload = {"inputs": f"Summarize this PR diff in simple terms:\n{diff_text}"}

          response = requests.post(
              "https://api-inference.huggingface.co/models/google/flan-t5-large",
              headers=headers,
              json=payload
          )

          try:
              response.raise_for_status()
              data = response.json()
              # Handle both error and success cases
              if isinstance(data, list) and 'generated_text' in data[0]:
                  summary = data[0]['generated_text']
              else:
                  summary = f"Unexpected API response: {data}"
          except Exception as e:
              summary = f"Failed to generate summary: {e}\nResponse content: {response.text}"

          print(summary)
          with open("summary.txt", "w") as f:
              f.write(summary)
          EOF
        env:
          HF_API_TOKEN: ${{ secrets.HF_API_TOKEN }}
          PR_DIFF: ${{ env.PR_DIFF }}

      - name: Post summary as PR comment
        run: |
          gh pr comment ${{ github.event.pull_request.number }} --body "$(cat summary.txt)"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
